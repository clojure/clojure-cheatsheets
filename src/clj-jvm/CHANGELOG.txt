---------------------------------------------------------------------
April 19, 2022 - Clojure 1.8 - 1.11, sheet v55

I forgot about the new clojure.math namespace added to Clojure 1.11,
and so neglected to document which of the new Vars added to that
namespace were added to the cheatsheet, versus which were not.  Here
is a complete list of them, without their "clojure.math/" namespace
qualifier:

New things in clojure.math namespace of Clojure 1.11 that have _not_
been added to the sheet at this time:

    IEEE-remainder add-exact copy-sign cosh decrement-exact
    get-exponent hypot increment-exact multiply-exact negate-exact
    next-after next-down next-up scalb signum sinh subtract-exact tanh
    to-degrees to-radians ulp

New things in clojure.math namespace of Clojure 1.11 that have been
added to the sheet in this version:

Added to Primitives / Numbers / Arithmetic section:

    floor-div floor-mod
    ceil floor rint round
    pow sqrt cbrt
    E exp expm1 log log10 log1p
    PI sin cos tan asin acos atan atan2

Added to Primitives / Numbers / Random section:

    random

Changed links to a couple of Github repos in organization
https://github.com/amalloy to point to to their new home in
https://github.com/clj-commons

Updated links to new Vars in Clojure 1.10 to point at ClojureDocs.org
web site.  When I created the first version of the cheatsheet with
these then-new Clojure 1.10 Vars, they did not exist yet on
ClojureDocs.org, so I made their occurrences on the cheatsheet link to
their official API docs instead.

---------------------------------------------------------------------
April 15, 2022 - Clojure 1.8 - 1.11, sheet v54

New things for Clojure 1.11 that have been added to the sheet in this
version:

Added to Sequences / Creating a Lazy Seq / From producer fn section:

    iteration

Unless the subtle bugs in the core.rrb-vector library are fixed, it
seems best not to point people towards it in the cheatsheet.  Removed
all mentions of it in this version.

---------------------------------------------------------------------
April 15, 2022 - Clojure 1.8 - 1.11, sheet v53

Made 'minimum version' Clojure 1.8, removing all (1.8) tags marking
things as new in 1.8.  Tags for things new in (1.9) (1.10) are still
present, as are tags (1.11) for things new in Clojure 1.11.0.

New things for Clojure 1.11 that have _not_ been added to the sheet at
this time:

    clojure.test/run-test
    clojure.test/run-test-var
    clojure.xml/disable-external-entities
    clojure.xml/sax-parser
    clojure.xml/startparse-sax-safe
    seq-to-map-for-destructuring
    iteration (I plan to add iteration soon, after getting
    recommendations on where to add it.)

New things for Clojure 1.11 that have been added to the sheet in this
version:

Added to Primitives / Numbers / Arithmetic section:

    abs

Added to Primitives / Numbers / Test section:

    NaN? infinite?

Added to Primitives / Strings / Use section:

    parse-boolean parse-double parse-long parse-uuid

Added to Collections / Maps / 'Change' section:

    update-keys update-vals

Added to Other / Misc section:

    random-uuid

---------------------------------------------------------------------
September 28, 2020 - Clojure 1.7 - 1.10, sheet v52

Updated the version of Clojure used to generate the cheatsheet from
1.10.1 to 10.10.2-alpha2, which corrected the doc strings printed for
special forms, no longer repeating a significant part of their
contents twice.

Also updated the version of many other libraries such as data.json,
core.async, etc.  The only effect of this was that one of the
core.async functions or macros had an additional couple of sentences
in its doc string.

Removed one dependency in the cheat sheet generator program, by
copying the one tiny function used from there (same EPL license) into
the generator program.

---------------------------------------------------------------------
December 23, 2019 - Clojure 1.7 - 1.10, sheet v51

---------------------------------------------------------------------
December 22, 2019 - Clojure 1.7 - 1.10, sheet v50

For those variants of the cheatsheet that included summary data about
the number of ClojureDocs examples and notes there are, and what the
see-also symbols are, they are now generated from a version of the
ClojureDocs.org site data from late 2018, instead of late 2014 as it
has been for 5 years now.

---------------------------------------------------------------------
June 20, 2019 - Clojure 1.7 - 1.10, sheet v49

Added new section Datafy with these functions:

    clojure.datafy/datafy
    clojure.datafy/nav

Added new section IO / tap with these functions:

    tap> add-tap remove-tap

Added these functions to section Java Interoperation / Exceptions:

    clojure.core/Throwable->map
    clojure.main/err->msg
    clojure.main/report-error

---------------------------------------------------------------------
June 14, 2019 - Clojure 1.7 - 1.10, sheet v48

Added these two functions, which were somehow left out before:

    clojure.edn/read
    clojure.edn/read-string

---------------------------------------------------------------------
December 17, 2018 - Clojure 1.7 - 1.10, sheet v47

Additional new things in Clojure 1.10, not mentioned in v46 comments
below, that have _not_ been added to the sheet at this time:

    clojure.datafy/datafy
    clojure.datafy/nav
    clojure.main/renumbering-read

Additional new things for Clojure 1.10 that have been added to the
sheet in this version:

Added to Namespace / From symbol section:

    requiring-resolve

---------------------------------------------------------------------
October 12, 2018 - Clojure 1.7 - 1.10, sheet v46

Made 'minimum version' Clojure 1.7, removing all (1.7) tags marking
things as new in 1.7.  Tags for things new in (1.8) (1.9) are still
present, as are tags (1.10) for things new in Clojure 1.10.0.

New things for Clojure 1.10 that have _not_ been added to the sheet at
this time:

    PrintWriter-on read+string
    add-tap remove-tap tap>

    clojure.core.protocols/Datafiable clojure.core.protocols/Navigable
    clojure.core.protocols/datafy clojure.core.protocols/nav

    clojure.core.server/io-prepl clojure.core.server/prepl
    clojure.core.server/remote-prepl

    clojure.core.specs.alpha/even-number-of-forms?
    clojure.spec.gen.alpha/shuffle

New things for Clojure 1.10 that have been added to the sheet in this
version:

Added to Java Interoperation / Exceptions section:

    ex-cause ex-message clojure.main/ex-str

---------------------------------------------------------------------
August 28, 2018 - Clojure 1.6 - 1.9, sheet v45

Added #: and ## to Special Characters section.

Corrected link to Java .lastIndexOf method to be in class
java.util.List, which is the interface that Clojure's lists and
vectors implement, not interface java.util.Vector as the link was
before.

---------------------------------------------------------------------
March 19, 2018 - Clojure 1.6 - 1.9, sheet v44

Corrected link to Spec guide page on clojure.org

Added these predicates for numbers, added in Clojure 1.9, to the
section Primitives / Numbers / Test:

  double? int? nat-int? neg-int? pos-int?

They were added to the new "Spec" section of the cheatsheet earlier,
but it seems reasonable to add them in Primitives / Numbers / Test,
too.


---------------------------------------------------------------------
December 16, 2017 - Clojure 1.6 - 1.9, sheet v43

Categorization of spec-related functions and macros from Alex Miller:

Operations:
  valid? conform unform
  explain explain-data explain-str explain-out
  form describe
  assert check-asserts check-asserts?

Generator operations:
  gen
  exercise exercise-fn

Spec definitions and registry:
  def fdef
  registry
  get-spec
  spec?
  spec with-gen

Logical specs:
  and, or

Collection specs:
  coll-of, map-of  - fully realizing coll specs
  every, every-kv - sampling coll specs
  keys - attribute maps
  merge - combining map specs

Regex specs:
  cat alt * + ? & keys*

Range specs:
  int-in inst-in double-in
  int-in-range? inst-in-range?

Other spec functions:
  nilable  (also nonconforming which is currently undocumented, but useful)
  multi-spec - multimethod spec
  fspec - anonymous function spec
  conformer

Custom explain printer:
  explain-printer
  *explain-out*

---------------------------------------------------------------------
December 14, 2017 - Clojure 1.6 - 1.9, sheet v42

Made 'minimum version' Clojure 1.6, removing all (1.6) tags marking
things as new in 1.6.  Tags for things new in (1.7) (1.8) are still
present, as are tags (1.9) for things new in Clojure 1.9.0.

New things for Clojure 1.9 that have _not_ been added to the sheet at
this time:

    *print-namespace-maps* *reader-resolver* Inst inst-ms inst-ms*

New things for Clojure 1.9 that have been added to the sheet in this
version:

    New in Concurrency / Atoms: reset-vals! swap-vals!
    New in Collections / Collections / Generic Ops: bounded-count
    New in Transducers / Off the shelf: halt-when
    New in Java Interoperation / Exceptions: StackTraceElement->vec

Predicate functions that all have generators defined for them in
version 0.9.0 of test.check are listed below, divided into a few
categories.  Many are new in Clojure 1.9, but many existed before.

    numbers: (pre 1.9) number? rational? integer? ratio? decimal?
    float? zero? (1.9) double? int? nat-int? neg-int? pos-int?

    symbols, keywords: (pre 1.9) keyword? symbol?  (1.9) ident?
    qualified-ident? qualified-keyword? qualified-symbol?
    simple-ident? simple-keyword? simple-symbol?

    other scalar types: (pre 1.9) string? true? false? nil? some?
    (1.9) boolean? bytes? inst? uri? uuid?

    collections: (pre 1.9) list? map? set? vector? associative? coll?
    sequential? seq? empty?  (1.9) indexed? seqable?

    other: (1.9) any?

The functions below have no generator defined for them in version
0.9.0 of test.check.  They are listed here solely because I was
composing a list of all predicate functions in Clojure, to determine
which ones had generators in test.check, vs. which did not.

Those that take any type of argument, without throwing exceptions:

    reduced? sorted? counted? reversible? record? map-entry? fn? ifn?
    var? future? volatile? class?

Those that throw exceptions for some types of arguments:

    pos? neg? even? odd? realized? bound? thread-bound? future-done?
    future-cancelled?

Vars in clojure.spec.alpha and related namespaces documented in spec
guide at: https://clojure.org/guides/spec

I will try to categorize these and add them to the sheet in a future
version.  I don't know enough to give them a good categorization yet.

    (require '[clojure.spec.alpha :as s])
    (require '[clojure.spec.gen.alpha :as gen])
    (require '[clojure.spec.test.alpha :as stest])

    s/conform s/valid? s/def s/explain s/explain-data s/keys s/keys* s/merge
    s/and s/or s/nilable s/multi-spec s/coll-of s/tuple s/cat s/map-of
    s/alt s/* s/+ s/? s/& s/spec
    s/assert s/check-asserts s/fdef s/fspec
    s/gen
    gen/generate gen/sample
    s/exercise s/exercise-fn
    gen/fmap gen/such-that gen/string-alphanumeric gen/tuple
    s/with-gen
    s/int-in s/inst-in s/double-in

    stest/instrument stest/check stest/abbrev-result
    stest/enumerate-namespace stest/summarize-results
    stest/unstrument

Predicates from earlier versions of Clojure that can only take
particular types as arguments, or else they throw an exception:

    zero? pos? neg? even? odd? clojure.string/blank? realized?
    clojure.zip/branch? clojure.zip/end? empty? bound? thread-bound?
    future-done? future-cancelled?

Predicates in earlier versions of Clojure that require more than one
argument:

    clojure.string/starts-with? clojure.string/ends-with?
    clojure.string/includes? identical? instance? every? not-every?
    not-any? contains? clojure.set/subseT? clojure.set/superset?
    satisfies? extends? isa? distinct?

distinct? doesn't require more than one argument, but is really meant
for collections, not individual values.

---------------------------------------------------------------------
November 11, 2017 - Clojure 1.5 - 1.8, sheet v41

Updated list of keyword literal examples in Primitives/Other section.
Added the ::namespace-alias/kw case, which had not been mentioned
before.  Replace "ns" abbreviations with "namespace".

---------------------------------------------------------------------
July 12, 2017 - Clojure 1.5 - 1.8, sheet v40

Update org.flatland/ordered dependency to newly released version
1.5.5, which has updated doc strings for the ordered-set and
ordered-map functions.  Better tooltips in the cheatsheet!

---------------------------------------------------------------------
June 17, 2017 - Clojure 1.5 - 1.8, sheet v39

Update links from http to https, except for this one, which doesn't
support https: http://www.regular-expressions.info

Update Oracle documentation links from JDK7 to JDK8.  State of Clojure
2016 survey indicates that over 90% of Clojure/Java users use JDK8.

Fixed a couple of stale links to anchors within the page
https://clojure.org/reference/reader

---------------------------------------------------------------------
June 17, 2017 - Clojure 1.5 - 1.8, sheet v38

Replace link from blog article "Weird and Wonderful Characters of
Clojure" to instead link link to the new "Reading Clojure Characters"
Clojure guide that started from the blog article, then enhanced it:
https://clojure.org/guides/weird_characters

Add to "Special Characters" section the core.async macros >!! <!! >!
<!

---------------------------------------------------------------------
July 4, 2016 - Clojure 1.5 - 1.8, sheet v37

Corrected typo in example for #?@ reader conditional.  It was missing
@ character after #?

---------------------------------------------------------------------
June 22, 2016 - Clojure 1.5 - 1.8, sheet v36

Added dedupe and random-sample to section Sequences / Get shorter.

---------------------------------------------------------------------
January 19, 2016 - Clojure 1.5 - 1.8, sheet v35

Made 'minimum version' Clojure 1.5, removing all (1.5) tags marking
things as new in 1.5.  Tags for things new in (1.6) (1.7) are still
present, as are tags (1.8) for things new in Clojure 1.8.0.

New things for Clojure 1.8:

Replaced Java method calls with new clojure.string functions: index-of
last-index-of starts-with? ends-with? includes?

Added map-entry? to Collections/Type tests section.

Other changes:

Removed clojure.string/re-quote-replacement from Strings/Use section.
It is still in most appropriate (and immediately following)
Strings/Regex section.

Removed char from Strings/Test section, where it does not belong.  It
is already in Others/Characters section.

Moved char? from Strings/Test section to Other/Characters.

---------------------------------------------------------------------
August 7, 2015 - Clojure 1.4 - 1.7, sheet v34

Now that data.int-map 0.2.1 is released, and it guarantees that the
seq order of its set and map collections have elements/keys in sorted
order, move its collections from "Create unsorted" sections to the
corresponding "Create sorted" sections of the cheatsheet.

---------------------------------------------------------------------
August 6, 2015 - Clojure 1.4 - 1.7, sheet v33

Add assoc-in to section Vectors/'Change'.

---------------------------------------------------------------------
June 18, 2015 - Clojure 1.4 - 1.7, sheet v32

Made 'minimum version' Clojure 1.4, removing all (1.4) tags marking
things as new in 1.4.  Tags for things new in (1.5) (1.6) are still
present, as are tags (1.7) for things new in Clojure 1.7.0.

New things for Clojure 1.7:

Added reader conditionals #? and #?@ to section Reader Macros.

Added update to Maps/'Change'.  Added update and update-in to
Vectors/'Change'.

Added new category Concurrency/Volatiles for volatile! vreset! vswap!
volatile?

Added run! to section Using a Seq/Force evaluation

Added new top level section Transducers, containing sections Off the
shelf, Create your own, Use, Early Termination.

---------------------------------------------------------------------
June 16, 2015 - Clojure 1.3 - 1.6, sheet v31

Added to Special Characters section:

    foo# syntax for auto-gensyms inside syntax-quoted expressions.
    #foo tagged literals

---------------------------------------------------------------------
June 10, 2015 - Clojure 1.3 - 1.6, sheet v30

Add clojure.core.rrb-vector vector constructor functions to section
Collections/Vectors.

---------------------------------------------------------------------
June 9, 2015 - Clojure 1.3 - 1.6, sheet v29

In Strings/Regex section, mention that \ characters inside #"" are not
escape characters, but represent themselves.

In Special Characters section, added entries for these:

    , read as white space
    ( list literal
    [ vector literal
    { map literal

Also change entries in left column to only show the beginning of the
sequence, with more full example in the right column.

    Replace #() with #( in left column
    Replace #"p" with #" in left column

Tweaked ' character in var-quote to look like single quote in LaTeX /
PDF versions, not like mathematics prime.

---------------------------------------------------------------------
June 8, 2015 - Clojure 1.3 - 1.6, sheet v28

Renamed section "Reader Macros" to "Special Characters", and added
more characters to it, plus a link to the often-cited article "The
Weird and Wonderful Characters of Clojure".

    #{ - set
    % - argument placeholder
    : keyword
    / namespace separator
    $ inner class reference
    -> ->>
    *foo* earmuffs - convention to indicate dynamic vars
    <symbol>? predicate marker (unenforced convention)
    <symbol>! unsafe operations (unenforced convention)
    _ unused var (unenforced convention)

---------------------------------------------------------------------
May 31, 2015 - Clojure 1.3 - 1.6, sheet v27

Add clojure.data.int-map/int-set, dense-int-set, and int-map.

Split Sets/Create section into Sets/Create unsorted and Sets/Create
sorted.  Similarly for Maps/Create.

Made more of the functions in these sections show their doc strings in
tooltip versions of cheatsheet.

---------------------------------------------------------------------
May 22, 2015 - Clojure 1.3 - 1.6, sheet v26

Add underive to section Multimethods/Relation

---------------------------------------------------------------------
May 21, 2015 - Clojure 1.3 - 1.6, sheet v25

Added definterface to section Java Interoperation/General.  Moved
gen-class and gen-interface to that section, from where they were in
Other/Code.

Added clojure.repl/dir to section Documentation.

Added sequence to section Sequences/Creating a Lazy Seq/From
collection.

----------------------------------------------------------------------
Mar 22, 2015 - Clojure 1.3 - 1.6, sheet v24

Added new section Collections/Queues for Clojure's persistent queues.

Changed literal example of list in Collections/List/Create from '() to
().  The quote is unnecessary for an empty list.  Reason it was
probably there: quoting is more commonly used for lists with one or
more values in them than for other collections, to avoid treatment of
the list as a function call or macro invocation.

----------------------------------------------------------------------
Feb 24, 2015 - Clojure 1.3 - 1.6, sheet v23

Added data.avl constructors for sorted sets and sorted maps:

    clojure.data.avl/sorted-set
    clojure.data.avl/sorted-set-by
    clojure.data.avl/sorted-map
    clojure.data.avl/sorted-map-by

----------------------------------------------------------------------
Feb 6, 2015 - Clojure 1.3 - 1.6, sheet v22

Removed = and not= from Numbers/Compare section.  It already had ==,
which is more appropriate for comparing numeric values than =, because
of the cross-type comparisons where = always returns false, and not=
always returns true, e.g. float/double vs. any integral type,
float/double vs. BigDecimal, any integral type vs. BigDecimal.

Removed == from Misc/Compare section since it was already in
Numbers/Compare section, and is redundant and perhaps confusing in
Misc section.

Added examples of literals for strings, characters, symbols, keywords.
Also added new Other/Misc section with literals true, false, and nil.
All have links to the clojure.org "Reader" documentation page,
straight to the anchor for "Reader forms" giving documentation for
syntax.

----------------------------------------------------------------------
Feb 3, 2015 - Clojure 1.3 - 1.6, sheet v21

Added (my-map k) -> (get my-map k) shorthand to Maps/Examine.

Move mapv and filterv from Vectors/Ops to Vectors/Create.  Also add
them to Using a Seq/Construct coll.  They return a vector, but they
can take any collection as an argument, so Vector/Ops wasn't really
appropriate.

Add reduce-kv to Maps/Ops.  Previously it was only mentioned under
Vectors, but its primary use is likely for maps.

Add Sets/Sorted sets section with same functions as in Maps/Sorted
maps, since those functions work on sorted sets, too.


----------------------------------------------------------------------
Dec 19, 2014 - Clojure 1.3 - 1.6, sheet v20

Grimoire 0.4.0 fixes and updates, thanks to Reid McKenzie and Alex
Robbins.

Add set! to Special Forms section.  It was only in the Java interop
section before, but of course it is also useful for setting
thread-local bindings of Vars.

----------------------------------------------------------------------
Nov 26, 2014 - Clojure 1.3 - 1.6, sheet v19

Added a few other kinds of sorted sets and sorted maps:

    flatland.ordered.set/ordered-set
    flatland.ordered.map/ordered-map
    clojure.data.priority-map/priority-map
    flatland.useful.map/ordering-map

----------------------------------------------------------------------
Nov 25, 2014 - Clojure 1.3 - 1.6, sheet v18

Added many links to "Reader Macros" section, including to specific
anchor points within http://clojure.org/reader that are now available.

----------------------------------------------------------------------
Sep 14, 2014 - Clojure 1.3 - 1.6, sheet v17

Added some functions previously not in cheatsheet:

    extends? - Now in Protocols/Test
    extend extend-protocol extenders - New section Protocols/Other
    class? bases supers type - Now in Java Interoperation/General

Also some Java String methods:

    .startsWith .endsWith .contains - Now in Strings/Test

Add link to Java API for BigInteger in Numbers/Bitwise section, since
Clojure bitwise functions only work on Longs and smaller.

Update Java API links to Java 7.  Java API links were to Java 6 docs
in earlier cheatsheet versions.

----------------------------------------------------------------------
Aug 29, 2014 - Clojure 1.3 - 1.6, sheet v16

Reorganized some operations on sets, maps, and relations.

Moved Rel algebra operations out of Set and into its own section
Relations, after Maps.

Added Sets/Set Ops section in place of Sets/Rel algebra.  It includes
only those operations that are for sets, but not specifically for
relations (e.g. union, intersection).  Added see also to Relations
section.

Removed section Sets/Get map and moved the operations that were there
to more appropriate places:

    clojure.set/map-invert - Now in Maps/'Change'
    clojure.set/rename-keys - Now in Maps/'Change'
    clojure.set/index - Now in Maps/Create and Relations/Rel algebra
    clojure.set/rename - Now in Relations/Rel algebra

Added link to Medley library in Maps/'Change' section.  I know that
Medley is not limited to functions in that category, but it definitely
contains several useful functions in that category, e.g. map-keys,
map-vals, filter-keys, filter-vals.

----------------------------------------------------------------------
Jul 13, 2014 - Clojure 1.3 - 1.6, sheet v15

Expanded out the abbreviated common prefixes/suffixes.  This makes it
possible to search for all of those vars by their normal names, at the
cost of making the cheatsheet only slightly longer.

Removed unchecked-add-int, etc. in favor of the long versions, since
longs are more commonly used in Clojure than ints.  Note that there
are unchecked-divide-int and unchecked-remainder-int, but Clojure has
never had unchecked-divide nor unchecked-remainder, at least as of
Clojure 1.6.

----------------------------------------------------------------------
Jun 15, 2014 - Clojure 1.3 - 1.6, sheet v14

Added vars that were not in the cheat sheet before:

    trampoline added to Functions/Call
    satisfies? added to Abstractions/Protocols/Test
    record? added to Abstractions/Records/Test
    the-ns added to Namespace/From symbol
    class added to Java Interoperation/General

----------------------------------------------------------------------
Mar 26, 2014 - Clojure 1.3 - 1.6, sheet v13

Added new vars for Clojure 1.6.0:

    unsigned-bit-shift-right added to Primitives/Numbers/Bitwise
    record? added to Collections/Collections/Type tests
    some? added to Collections/Misc/Test
    if-some, when-some added to Macros/Branch and Vars and Special
        Forms/Binding Forms

The following new vars in Clojure 1.6.0 were not added to the cheat
sheet, sincet they seem fairly specialized for those implementing
their own collections:

    hash-ordered-coll, hash-unordered-coll, mix-collection-hash

----------------------------------------------------------------------
Oct 2, 2013 - Clojure 1.3 - 1.5, sheet v12

Added next to section Sequences/Seq in, Seq out/Tail-items

----------------------------------------------------------------------
Aug 27, 2013 - Clojure 1.3 - 1.5, sheet v11

Added link to Chas Emerick's handy Clojure type selection flowchart
after the headings of the Abstrations and Proxy sections:
    https://github.com/cemerick/clojure-type-selection-flowchart

Removed from Numbers/Test section: nil? and identical? did not really
belong there.

Added to Numbers/Test section: number? rational? integer? ratio?
decimal? float?

Added to Vars/Var objects section: bound? thread-bound?

----------------------------------------------------------------------
Mar 1, 2013 - Clojure 1.3 - 1.5, sheet v10

Added letfn to Special forms section

----------------------------------------------------------------------
Mar 1, 2013 - Clojure 1.3 - 1.5, sheet v9

Added these new symbols added in Clojure 1.5:

re-quote-replacement
*default-data-reader-fn*
as-> cond-> cond->> some-> some->>
send-via set-agent-send-executor! set-agent-send-off-executor!

Also the "Data Reader" subsection was moved from Primitives/Other
section to IO section, where it belongs much better.

Still to add: Several of the new functions in the
clojure.core.reducers namespace.

----------------------------------------------------------------------
Feb 13, 2013 - Clojure 1.3 & 1.4, sheet v8

Moved take-nth function from "Head-items" under "Seq in, Seq out" to
"Get shorter", which is a more accurate category for it.

Update link for binding forms / destructuring examples on clojure.org.

Removed :static keyword from examples in Metadata section.  It appears
frequently in Clojure code, but it has no effect in the compiler any
more, and is thus obsolete.

For those variants of the cheatsheet that include tooltips with the
ClojureDocs.org contents summary line, now also explicitly show the
list of symbols that are "see also" on the ClojureDocs.org site, right
in the tooltip.  Before it only included the number of such symbols in
the tooltip.

Add clojure.tools.reader.edn/read and read-string to the IO section.
clojure.core/read and read-string are still there, but have a big
warning after them right on the cheatsheet.


----------------------------------------------------------------------
Oct 14, 2012 - Clojure 1.3 & 1.4, sheet v7

Removed "1." from cheat sheet version number, in hopes of avoiding
confusion with Clojure version numbers.  The cheat sheet version
number advances independently from Clojure version numbers.

Added example literals for long ints in hex, octal, binary, and base
36.  Also scientific notation for doubles.

Changed category of with-decimal from BigInt to BigDecimal

Added most clojure.walk functions to Collections/Generic ops section.

Added more clojure.java.io functions to IO/Misc section.

Created new section Macros/Debug for all macroexpand functions
(formerly in Macros/Create).

Added clojure.java.browse/browse-url and clojure.java.shell/{sh,
with-sh-dir, with-sh-env} to new section Other/Browser/Shell.

----------------------------------------------------------------------
Oct 8, 2012 - Clojure 1.3 & 1.4, sheet v1.6

Added *unchecked-math* and the following symbols from Clojure 1.4, all
marked with (1.4) on the sheet:

Extensible data literals in reader:
*data-readers*, default-data-readers

New operations on vectors:
mapv, filterv, reduce-kv

Data-conveying exceptions:
ex-data, ex-info

Since ClojureDocs.org has no symbols new to Clojure 1.4 yet, all links
for those symbols always go instead to the Clojure API documentation
on Github.

----------------------------------------------------------------------
March 22, 2012 - Clojure 1.3.0, sheet v1.4

Added (tutorial) entries in Namespace/Create and Loading/Load Libs
sections that link to this nice article:
    http://blog.8thlight.com/colin-jones/2010/12/05/clojure-libs-and-namespaces-require-use-import-and-ns.html

Added links to more details on regular expressions in the
Strings/Regex section:
    http://www.regular-expressions.info
    http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html

Added to Strings section: java.lang.String (abbreviated String in PDF
version to fit better) .indexOf .lastIndexOf, with links to
java.lang.String doc page.

Added to Collections/Lists and Vectors sections: .indexOf and
.lastIndexOf, with links to similar methods documented for
java.util.Vector.

Changed heading Destructuring in Special Forms section to "Binding
Forms / Destructuring", for people who might know it by one name but
not the other.

Added to Maps/Create: group-by
Added to IO/from reader: read

Added Numbers/Literals section with examples of literal syntax for
BigInt, Ratio, and BigDecimal.

Removed :doc from Metadata/Common section and added :const instead.
Doc strings are more commonly handled with the normal way to put them
in def or defn forms.

----------------------------------------------------------------------
2012 Feb 23 - Clojure 1.3.0, sheet v1.3

Added new section Destructuring, with a link to a page containing
examples on clojure.org, and a list of the most commonly-used macros
that allow destructuring to be used within them.

Added biginteger, clojure.java.io/file and copy, and link to fs
project on GitHub for file manipulation functions.

Removed "Others" part of Metadata section.  It contained too many
rarely-used metadata keys that can better be described on the
clojure.org/special_forms web page linked to.

Added more links to clojure.org, mostly in section titles.

Moved take-last from subcategory Head-items to Tail-items in Seq
in/Seq out section.

Moved Zippers/Get zipper functions to Zippers/Create.

Fix link to ->> in LaTeX so it works in generated PDF files.

Many small tweaks to try to get it to almost fit in 2 pages with both
US letter and A4 page sizes, but I think I'm giving up on that.  It is
2+ sheets on paper, with room to grow.  I used several more
occurrences of common {pre, suf}fixes to try to get it down, and left
those in.

----------------------------------------------------------------------
2012 Feb 17 - Clojure 1.3.0, sheet v1.2

Added / after all namespace symbols, plus a brief note about this
notation, to be clearer to those new to Clojure.

Improved formatting of some code snippets in Abstractions section.

Made URL to clojure.org clickable, and added a few more of them.

Fixed several typos: with-in-string -> with-in-str, Print/to string
changed to IO/to string.

Removed function sequence, which is rarely if ever used.  seq is far
more common and useful.

----------------------------------------------------------------------
2012 Feb 16 - Clojure 1.3.0, sheet v1.1

Primitives/Strings: Restructured to remove split between functions in
clojure.core vs. clojure.string, added Regex functions (moved from
where they used to be, way at the end in Other/Regex).

Collections: Added examples of abbreviations like (my-vec idx) -> (nth
my-vec idx), for vectors, maps, and sets.  Combined subsections Sets
and Sets (clojure.set).

Removed StructMaps.

Printing: Renamed IO, and significantly expanded its content.  Moved
what was in Other/IO here.  I put in links to some Java 6 docs and a
couple of binary I/O Clojure libraries on github.  That might be going
overboard.

Multimethods: Renamed Abstractions, like in Fogus's ClojureScript
cheatsheet, and pretty much copied what he had there (adjusting for
slight ClojureScript and Clojure/JVM differences I know about, like
. instead of .-)

Reader Macros: Removed obsolete ^form -> (meta form).  Changed #^ to ^

Metadata: Added new section with some details on metadata.

Special Forms: No content changes, simply moved earlier to try to make
things pack a little better in PDF version, which is just barely over
2 page now.

----------------------------------------------------------------------
2012 Feb 15 - Clojure 1.3.0, sheet v1.0

Minor clojure-cheatsheet-generator.clj script updates so it would run
without errors or warnings with Clojure 1.3.0.

Removals:

replicate, because DEPRECATED.
throw-if since it is declared private in clojure.core.  It was in 1.2
as well, but does it really belong in the cheatsheet?


Additions of things new in Clojure 1.3.0:

find-keyword to Other/Keywords
realized? to Using a Seq/Check for forced evaluation
every-pred and some-fn to Functions/Create
with-redefs and with-redefs-fn to Macros/Scope
clojure.repl/pst to Java Interoperation/Exceptions
unchecked-{add,dec,divide,inc,multiply,negate,remainder,subtract}-int to Numbers/Unchecked.  Space is a bit tight in that column to also include the long versions.
nthrest to Seq in, Seq out/Tail-items
clojure.data/diff to Misc/Compare
clojure.java.javadoc/javadoc to Documentation/clojure.repl (I know, it is not really in clojure.repl -- space is getting tight in that column)
clojure.pprint/pprint and print-table to Printing/Print to *out*


Additions of things that existed before Clojure 1.3.0:

compare to several places that seem appropriate:
    Seq in, Seq out/Rearrange, after sort-by
    Numbers/Compare
    Strings/Use
    Misc/Compare
flatten to Seq in, Seq out/'Change'
fnil to Functions/Create
instance? to Misc/Test


Moved:

doc and find-doc to Documentation/clojure.repl, since they moved from
clojure.core in 1.2.x to clojure.repl in 1.3.0.

----------------------------------------------------------------------
2011 Sep 05

Changes in cheatsheet version 2.0 from the cheatsheet version
published at http://clojure.org/cheatsheet as of Sep 5, 2011:

Additions:

Collections/Sets: sorted-set-by
Macros/Branch: case

Removals:

Removed contains? from Collections/Collections/Content tests, but
remains in Collections/Maps.  Its appearance in the former category is
potentially misleading as to its behavior.  Suggested by Stuart
Sierra.

Removed Transients/Change and Transients/Iteration categories, since
those functions did not work on transients.  All of the functions that
were there also appear elsewhere in more appropriate categories of the
cheatsheet.  Renamed Transients/Use to Transients/Change.

Removed nthrest and rfirst, which had no links to any documentation.
I believe they existed in a version of Clojure before 1.2, but were
removed by version 1.2 or earlier.

Minor:

HTML uses < > = ! instead of codes like %3C %3E etc.

Some reordering of lists of functions referring to types like byte,
short, int, long.
